version: 2.1

parameters:
  namespace:
    type: string
    default: usct
  playground:
    type: boolean
    default: false
  image:
    type: string
    default: "app/usct/frontend"

orbs:
  helm: circleci/helm@3.0.0

commands:
  build_and_deploy:
    parameters:
      deploy:
        type: boolean
        default: false
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - helm/install_helm_client:
          version: v3.13.0
      - run:
          name: Setup env
          command: |
              echo "export IMAGE=${CONTAINER_REGISTRY}/<< pipeline.parameters.image >>" >> "$BASH_ENV"
      - run:
          name: Build docker image
          command: |
            docker build -t $IMAGE:latest .
      - run:
          name: Check Helm Chart
          command: |
            helm lint ./helm
      - when:
          condition: << parameters.deploy >>
          steps:
            - run:
                name: Install oci cli
                command: |
                  pip3 install --upgrade pip
                  python3 -m pip install oci-cli
            - run:
                name: Push image
                command: |
                  docker login ${DOCKER_SERVER} -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
                  docker push "$IMAGE:latest"
            - run:
                name: Update kubeconfig
                command: |
                  mkdir -p $HOME/.kube
                  export OCI_CLI_KEY_CONTENT=$(echo $OCI_CLI_KEY_CONTENT_B64 | base64 -d)
                  oci ce cluster create-kubeconfig --cluster-id ${OKE_CLUSTER_ID} --file $HOME/.kube/config --region ${OCI_CLI_REGION} --token-version 2.0.0  --kube-endpoint PUBLIC_ENDPOINT
                  chmod 600 $HOME/.kube/config
            - run:
                name: Deploy project
                command: |
                  export OCI_CLI_KEY_CONTENT=$(echo $OCI_CLI_KEY_CONTENT_B64 | base64 -d)
                  export KUBECONFIG=$HOME/.kube/config
                  kubectl -n << pipeline.parameters.namespace >> create secret docker-registry ocirsecret --docker-server=${DOCKER_SERVER} --docker-username="${DOCKER_USERNAME}" --docker-password="${DOCKER_PASSWORD}"
                  DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE:latest)
                  DIGEST="${DIGEST#*@}"
                  helm upgrade --install --wait --dependency-update --create-namespace \
                    --namespace << pipeline.parameters.namespace >> \
                    --set-string "container.image=${IMAGE}@${DIGEST}" \
                    usct-frontend ./helm

jobs:
  build:
    docker:
      - image: cimg/aws:2023.09
    steps:
      - build_and_deploy:
          deploy: false

  build-and-deploy:
    docker:
      - image: cimg/aws:2023.09
    steps:
      - build_and_deploy:
          deploy: true

workflows:
  # build every commit
  # "Just build":
  #   when:
  #     and:
  #       - equal: [ false, << pipeline.parameters.playground >> ]
  #       - equal: [ 'main', << pipeline.git.branch >> ]
  #   jobs:
  #     - build:
  #         context: playground

  # build and deploy to playground depending on parameter
  "Build and deploy to playground":
    when:
      and:
        - equal: [ false, << pipeline.parameters.playground >> ]
        - equal: [ 'main', << pipeline.git.branch >> ]
    jobs:
      - build-and-deploy:
          context: playground
